// <auto-generated />
using System;
using DDDUniversidadeBroadcast.Infra.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DDDUniversidadeBroadcast.Infra.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Evento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Aberto")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT");

                    b.Property<string>("Descricao")
                        .HasColumnType("TEXT");

                    b.Property<string>("Local")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Participante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UltimaNotificacao")
                        .HasColumnType("TEXT");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("UsuarioId");

                    b.HasIndex("EventoId", "UsuarioId")
                        .IsUnique();

                    b.ToTable("Participantes");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Postagem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("AutorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Comentarios")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Conteudo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Curtidas")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DataHora")
                        .HasColumnType("TEXT");

                    b.Property<int>("EventoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.HasIndex("EventoId");

                    b.ToTable("Postagens");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Seguidor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("SegueId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeguidoId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SeguidoId");

                    b.HasIndex("SegueId", "SeguidoId")
                        .IsUnique();

                    b.ToTable("Seguidores");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Curso")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("Nome")
                        .IsUnique();

                    b.HasIndex("Telefone")
                        .IsUnique();

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Participante", b =>
                {
                    b.HasOne("DDDUniversidadeBroadcast.Domain.Models.Evento", "Evento")
                        .WithMany("Participantes")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DDDUniversidadeBroadcast.Domain.Models.Usuario", "Usuario")
                        .WithMany()
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Evento");

                    b.Navigation("Usuario");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Postagem", b =>
                {
                    b.HasOne("DDDUniversidadeBroadcast.Domain.Models.Usuario", "Autor")
                        .WithMany("Postagens")
                        .HasForeignKey("AutorId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DDDUniversidadeBroadcast.Domain.Models.Evento", "Evento")
                        .WithMany("Postagens")
                        .HasForeignKey("EventoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Autor");

                    b.Navigation("Evento");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Seguidor", b =>
                {
                    b.HasOne("DDDUniversidadeBroadcast.Domain.Models.Usuario", "Segue")
                        .WithMany("Seguindo")
                        .HasForeignKey("SegueId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DDDUniversidadeBroadcast.Domain.Models.Usuario", "Seguido")
                        .WithMany("Seguidores")
                        .HasForeignKey("SeguidoId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Segue");

                    b.Navigation("Seguido");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Evento", b =>
                {
                    b.Navigation("Participantes");

                    b.Navigation("Postagens");
                });

            modelBuilder.Entity("DDDUniversidadeBroadcast.Domain.Models.Usuario", b =>
                {
                    b.Navigation("Postagens");

                    b.Navigation("Seguidores");

                    b.Navigation("Seguindo");
                });
#pragma warning restore 612, 618
        }
    }
}
